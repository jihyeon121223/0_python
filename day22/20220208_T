{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "a29c90ae-993e-4c78-90f7-b665262aaf53",
   "metadata": {},
   "outputs": [],
   "source": [
    "def print_3_times():\n",
    "    print(\"안녕하세요\")\n",
    "    print(\"안녕하세요\")\n",
    "    print(\"안녕하세요\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "a330bdc9-de02-4d4e-9cda-8d5e20c87c4f",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "안녕하세요\n",
      "안녕하세요\n",
      "안녕하세요\n"
     ]
    }
   ],
   "source": [
    "print_3_times()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "db2ba04e-4c9e-4578-9eac-1726e4a163c5",
   "metadata": {},
   "outputs": [],
   "source": [
    "def print_3_times(name):\n",
    "    print(name+\"님 안녕하세요\")\n",
    "    print(name+\"님 안녕하세요\")\n",
    "    print(name+\"님 안녕하세요\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "5dc071e0-0338-4c8b-bcd7-7d5e75191dc0",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "권혜진님 안녕하세요\n",
      "권혜진님 안녕하세요\n",
      "권혜진님 안녕하세요\n"
     ]
    }
   ],
   "source": [
    "print_3_times(\"권혜진\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "2db99f4a-cb0a-4f0e-98a6-0a2ad8e367d7",
   "metadata": {},
   "outputs": [],
   "source": [
    "def print_3_times(name):\n",
    "    for i in range(3):\n",
    "        print(name+\"님 안녕하세요\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "c3e72f7b-26f7-45e7-a856-1af6c06eed2e",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "최유진님 안녕하세요\n",
      "최유진님 안녕하세요\n",
      "최유진님 안녕하세요\n"
     ]
    }
   ],
   "source": [
    "print_3_times(\"최유진\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "bf10eb3a-27a9-4aa2-85c9-8d47e17e9345",
   "metadata": {},
   "outputs": [],
   "source": [
    "def print_n_times(name,n_times):\n",
    "    for i in range(n_times):\n",
    "        print(name+\"님 안녕하세요\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "71d1bd2a-1b24-412c-b94b-0d8247d10822",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "이민주님 안녕하세요\n",
      "이민주님 안녕하세요\n",
      "이민주님 안녕하세요\n",
      "이민주님 안녕하세요\n",
      "이민주님 안녕하세요\n"
     ]
    }
   ],
   "source": [
    "print_n_times(\"이민주\",5)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "2c05a3bd-e35a-4f34-b1b9-119fae0509f1",
   "metadata": {},
   "outputs": [],
   "source": [
    "name = [\"조혜원\",\"정지훈\",\"이대혁\",\"정호영\"]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "23f5f6d0-33b1-4f67-83dd-fbdc367bacf9",
   "metadata": {},
   "outputs": [],
   "source": [
    "def print_n_times(name):\n",
    "    for i in range(len(name)):\n",
    "        print(name[i]+\"님 안녕하세요\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "eae28f16-eeb8-4974-ac40-b115cc0e95e7",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "조혜원님 안녕하세요\n",
      "정지훈님 안녕하세요\n",
      "이대혁님 안녕하세요\n",
      "정호영님 안녕하세요\n"
     ]
    }
   ],
   "source": [
    "welcome(name)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "622c3151-80fe-4cb2-aaee-20ce6252a703",
   "metadata": {},
   "source": [
    "총 4명의 학생이 출석했습니다\n",
    "1번 조혜원님\n",
    "2번 정지훈님\n",
    "3번 이대혁님\n",
    "4번 정호영님\n",
    "모두 열심히 수업하세요"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "03a66da3-411b-4f6c-80aa-7940e9d7a048",
   "metadata": {},
   "outputs": [],
   "source": [
    "def print_n_times(name):\n",
    "    print(\"총 \"+str(len(name))+\"명의 학생이 출석했습니다\")\n",
    "    for i in range(len(name)):\n",
    "        print(str(i+1)+\"번 \"+name[i])\n",
    "    print(\"모두 열심히 수업하세요\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "9f2e5a54-482e-458c-9090-c6b8b8473581",
   "metadata": {},
   "outputs": [],
   "source": [
    "import random "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "1de2d31c-ea3e-4f51-8e86-41ac31c68130",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "3"
      ]
     },
     "execution_count": 28,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "random.choice(range(1,7))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "id": "4d33ca95-1d6a-41a7-9ff1-0a88d574f3d5",
   "metadata": {},
   "outputs": [],
   "source": [
    "name = [\"조혜원\",\"정지훈\",\"이대혁\",\"정호영\"]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "b7174906-5be2-487a-90d3-920f450bc526",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'정지훈'"
      ]
     },
     "execution_count": 30,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import random \n",
    "random.choice(name)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "id": "3badf45d-2a28-46d2-9e4a-bac513c7e188",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'이대혁'"
      ]
     },
     "execution_count": 32,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "random.choice(name)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "846c704c-b594-4b6f-806a-4de21d37efab",
   "metadata": {},
   "source": [
    "총 4명의 학생이 존재합니다\n",
    "조혜원 님\n",
    "이대혁 님\n",
    "이 선택되었습니다 축하합니다"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "id": "27b4f327-222c-43e7-af98-6b54545596ad",
   "metadata": {},
   "outputs": [],
   "source": [
    "def welcome(x):\n",
    "    print(f'총 {len(x)}명의 학생이 존재합니다')\n",
    "    while True:\n",
    "        choice1 = random.choice(x)\n",
    "        print(f'{choice1}님')\n",
    "        x.remove(choice1)\n",
    "        if len(x) == 2:\n",
    "            break\n",
    "    print(\"이 선택되었습니다 축하합니다\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 55,
   "id": "d63409b5-465a-440b-b12a-0e22f3996481",
   "metadata": {},
   "outputs": [],
   "source": [
    "def welcome(x):\n",
    "    print(\"총 {}명의 학생이 존재합니다\".format(len(x)))\n",
    "    while True:\n",
    "        choice1 = random.choice(x)\n",
    "        print(\"{}님\".format(choice1))\n",
    "        choice2 = random.choice(x)\n",
    "        if choice1 != choice2:\n",
    "            print(\"{}님\".format(choice2))\n",
    "            print(\"이 선택되었습니다 축하합니다\")\n",
    "            break\n",
    "        else:\n",
    "            tmp_x = [i for i in x if i != choice1]\n",
    "            choice2 = random.choice(tmp_x)\n",
    "            print(\"{}님\".format(choice2))\n",
    "            print(\"이 선택되었습니다 축하합니다\")\n",
    "            break        "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 106,
   "id": "363b7b19-4e4d-4101-8379-6dc6a45a24f8",
   "metadata": {},
   "outputs": [],
   "source": [
    "def welcome(name):\n",
    "    print(f'총{len(name)}명의 학생이 존재합니다')\n",
    "    x = name.copy()\n",
    "    choice = random.choice(x)\n",
    "    print(f'{choice}님')\n",
    "    x.remove(choice)\n",
    "    choice = random.choice(x)\n",
    "    print(f'{choice}님')\n",
    "    print(\"이 선택되었습니다 축하합니다\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 109,
   "id": "f5c636a3-ce9f-461c-ada2-16956dac89a1",
   "metadata": {},
   "outputs": [],
   "source": [
    "def welcome_n(name,n):\n",
    "    x = name.copy()\n",
    "    result = []\n",
    "    while True:\n",
    "        choice = random.choice(x)\n",
    "        result.append(choice)\n",
    "        if len(result) == n:\n",
    "            break\n",
    "        x.remove(choice)\n",
    "    return result"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 127,
   "id": "d8aa58a7-1f0d-400f-98ce-c7a74fa1ae7c",
   "metadata": {},
   "outputs": [],
   "source": [
    "def welcome_n(name,n):\n",
    "    x = name.copy()\n",
    "    if len(x) < n:\n",
    "        return print(f'학생부의 총 학생은{len(x)}명인데 입력한 학생은{n}명입니다')\n",
    "    result = []\n",
    "    cnt = 0\n",
    "    while cnt < n:\n",
    "        choice = random.choice(x)\n",
    "        result.append(choice)\n",
    "        x.remove(choice)\n",
    "        cnt += 1\n",
    "    return result"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 131,
   "id": "d19733c1-34e1-45d6-ab83-bb8dba5516a4",
   "metadata": {},
   "outputs": [],
   "source": [
    "def welcome_n(name,n):\n",
    "    x = name.copy()\n",
    "    if len(x) < n:\n",
    "        return print(f'학생부의 총 학생은{len(x)}명인데 입력한 학생은{n}명입니다')\n",
    "    result = []\n",
    "    for i in range(n):\n",
    "        choice = random.choice(x)\n",
    "        result.append(choice)\n",
    "        x.remove(choice)\n",
    "    return result"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 136,
   "id": "18697d46-7c5b-4524-91ce-3d0da7efe203",
   "metadata": {},
   "outputs": [],
   "source": [
    "def welcome_n(name,n=6):\n",
    "    x = name.copy()\n",
    "    if len(x) < n:\n",
    "        return print(f'학생부의 총 학생은{len(x)}명인데 입력한 학생은{n}명입니다')\n",
    "    result = []\n",
    "    for i in range(n):\n",
    "        choice = random.choice(x)\n",
    "        result.append(choice)\n",
    "        x.remove(choice)\n",
    "    return result"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 139,
   "id": "8dc32ee6-506f-4be2-846a-6dbc59ca0c9b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "['정지훈', '백인엽', '김수빈', '조혜원', '강보민', '정지연']"
      ]
     },
     "execution_count": 139,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "welcome_n(name)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 144,
   "id": "b982146f-06a7-41dd-afa5-cd8a0e455f13",
   "metadata": {},
   "outputs": [],
   "source": [
    "obj = list(range(1,9999999))\n",
    "random.shuffle(obj)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 145,
   "id": "234d18ed-d239-4eda-8a9b-a49cbda3e294",
   "metadata": {},
   "outputs": [],
   "source": [
    "obj = obj[:1000]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 165,
   "id": "2a99a5b9-2510-4811-99da-837183fe87e7",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "4060921"
      ]
     },
     "execution_count": 165,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "obj[0]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 159,
   "id": "49558aca-831e-4e7a-b10e-697e1cc98a59",
   "metadata": {},
   "outputs": [],
   "source": [
    "def calc_num(x):\n",
    "    s = 0\n",
    "    for i in str('4060921'):\n",
    "        s += int(i)\n",
    "    return s"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 174,
   "id": "05154680-13b3-4641-b560-807a978bb32a",
   "metadata": {},
   "outputs": [],
   "source": [
    "new_obj = []\n",
    "for i in obj:\n",
    "    new_obj.append(calc_num(i))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 184,
   "id": "1ff58cf3-b311-4056-9b48-56c8b3bd7867",
   "metadata": {},
   "outputs": [],
   "source": [
    "new_obj = [ calc_num(i) for i in obj]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 167,
   "id": "f4a53483-2c25-4105-940b-eee758904520",
   "metadata": {},
   "outputs": [],
   "source": [
    "def avg(x):\n",
    "    return sum(x)/len(x)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "a9bf64cb-b9a0-46d6-910a-0df70327d83f",
   "metadata": {},
   "outputs": [],
   "source": [
    "1184444262"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 173,
   "id": "d26e6ef2-eaaa-4256-b95d-09ef818527c7",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "1184444262"
      ]
     },
     "execution_count": 173,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "new_obj = []\n",
    "for ob in obj:\n",
    "    if ob < avg(obj):\n",
    "        new_obj.append(ob)\n",
    "sum(new_obj)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 196,
   "id": "33373a13-6c06-4e0f-8a7b-73ebb0f5e37c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "2368888.524"
      ]
     },
     "execution_count": 196,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "avg(list(filter(lambda x: x < avg(obj),obj)))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 203,
   "id": "45bf54fb-a695-4d0e-ba52-93733113ad89",
   "metadata": {},
   "outputs": [],
   "source": [
    "def xxx(x):\n",
    "    return len(str(x))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 207,
   "id": "890ae6fd-d8e4-4d19-bfce-4dd645570e40",
   "metadata": {},
   "outputs": [],
   "source": [
    "obj = list(range(1,9999999))\n",
    "random.shuffle(obj)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 208,
   "id": "6342e28b-cf6c-401f-919d-78c961bc07c2",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "9999998"
      ]
     },
     "execution_count": 208,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "len(obj)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 189,
   "id": "833b1e38-2793-4180-a4bb-164b99603227",
   "metadata": {},
   "outputs": [],
   "source": [
    "def xx(x):\n",
    "    return x**2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 192,
   "id": "8b8932f1-d013-4c8c-bd1d-7b84fc4d8ef4",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "64"
      ]
     },
     "execution_count": 192,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "(lambda x : x**2)(8)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 181,
   "id": "2f7f0333-a3fc-446f-a674-a4fb9a17028f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "6"
      ]
     },
     "execution_count": 181,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "a = [\"1\",\"2\",\"3\"]\n",
    "new_a = []\n",
    "for i in a:\n",
    "    new_a.append(int(i))\n",
    "sum(new_a)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 212,
   "id": "d6600de4-8403-4dbd-9b0f-6db7cae153d6",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'2290651'"
      ]
     },
     "execution_count": 212,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "str(obj[0])[::-1]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 213,
   "id": "8396fe64-0b36-41a8-8cfa-a228c719b9d4",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "False"
      ]
     },
     "execution_count": 213,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "str(x) == str(x)[::-1]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 214,
   "id": "b393b1e7-639f-465b-81d8-c618e9910509",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "10997"
      ]
     },
     "execution_count": 214,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "len(list(filter(lambda x: str(x) == str(x)[::-1],obj)))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 65,
   "id": "8f38d38e-3b64-458b-b07d-c737de12c779",
   "metadata": {},
   "outputs": [],
   "source": [
    "name = name + [\"정지연\",\"백인엽\",\"권혜진\",\"이정승\",\"김수빈\",\"이민주\",\"유지현\"]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "id": "09a0e1ac-71ee-40a7-ad7b-b2c550533f3e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "['조혜원', '정호영']"
      ]
     },
     "execution_count": 47,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "비복원(x,n)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 71,
   "id": "34a68d76-5b3c-4302-8dad-cd0635de3629",
   "metadata": {},
   "outputs": [],
   "source": [
    "def 비복원(x,n):\n",
    "    choice = random.choice(x)\n",
    "    return [choice*n]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 72,
   "id": "7d12c6d5-66a3-4ac1-8b8d-75cbdc283ab8",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "['권혜진권혜진']"
      ]
     },
     "execution_count": 72,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "비복원(name,2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 79,
   "id": "0b5665f0-29a4-4a06-abe9-adcb8903dc07",
   "metadata": {},
   "outputs": [],
   "source": [
    "def 복원(x,n):\n",
    "    result = []\n",
    "    for i in range(n):\n",
    "        result.append(random.choice(x))\n",
    "    return result"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 83,
   "id": "dc45dd7d-36fd-404c-b93b-e3e41918d23e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "['정지훈', '백인엽', '이정승']"
      ]
     },
     "execution_count": 83,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "복원(name,3)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 221,
   "id": "dc5e9517-8476-46e8-8fa8-d4139c1f11be",
   "metadata": {},
   "outputs": [],
   "source": [
    "def return_test(a=10):\n",
    "    print(\"A위치 입니다\")\n",
    "    return \n",
    "    print(\"B위치 입니다\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 222,
   "id": "e4c42ee2-dabb-46d6-8903-0ff54e29a6fa",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "A위치 입니다\n"
     ]
    }
   ],
   "source": [
    "x = return_test()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 226,
   "id": "e488c8ec-3958-451b-b2d9-09c33bc87117",
   "metadata": {},
   "outputs": [],
   "source": [
    "x"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 227,
   "id": "740be560-f4d0-4bc2-b6db-ca47bc58c0f9",
   "metadata": {},
   "outputs": [],
   "source": [
    "def print_n_times(n=2,*values):\n",
    "    for i in range(n):\n",
    "        for value in values:\n",
    "            print(value)\n",
    "        print()\n",
    "        "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 231,
   "id": "323a5170-33ca-4b8c-bf01-0e50202f09b5",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "안녕하세요\n",
      "즐거운\n",
      "파이썬\n",
      "\n",
      "안녕하세요\n",
      "즐거운\n",
      "파이썬\n",
      "\n",
      "안녕하세요\n",
      "즐거운\n",
      "파이썬\n",
      "\n"
     ]
    }
   ],
   "source": [
    "print_n_times(3,\"안녕하세요\",\"즐거운\",\"파이썬\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 238,
   "id": "fc688303-aa89-4460-96fe-bff6590aa1e8",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "['e', 'b', 'a', 'g', 'd', 'f', 'h']"
      ]
     },
     "execution_count": 238,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "args = {\"name\":kkk,\"n\":7}\n",
    "welcome_n(**args)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 236,
   "id": "41f7f84b-caa8-4041-83c6-a972dfc8323e",
   "metadata": {},
   "outputs": [],
   "source": [
    "kkk = 'a b c d e f g h i j'.split(' ')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 237,
   "id": "41f935fd-5b89-4287-a7c9-78d4659c7f04",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j']"
      ]
     },
     "execution_count": 237,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "welcome_n(**args) *values"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 239,
   "id": "89baa910-0a91-45c6-96dd-0e1a764cd163",
   "metadata": {},
   "outputs": [],
   "source": [
    "def mul(*values):\n",
    "    s = 1\n",
    "    for value in values:\n",
    "        s *= value\n",
    "    return s"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 240,
   "id": "3fb7ac94-56c6-46f2-b2fc-14061bf0a0b0",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "3150"
      ]
     },
     "execution_count": 240,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "mul(5,7,9,10)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 241,
   "id": "291ec8b1-e316-42bb-a0d0-d7bcdab2c515",
   "metadata": {},
   "outputs": [],
   "source": [
    "def mul(values):\n",
    "    s = 1\n",
    "    for value in values:\n",
    "        s *= value\n",
    "    return s"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 242,
   "id": "bf95718e-ee74-47db-b4ba-198e772ad442",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "3150"
      ]
     },
     "execution_count": 242,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "mul([5,7,9,10])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 244,
   "id": "c356b0bb-fa5c-4985-9ecd-58099c2adaed",
   "metadata": {},
   "outputs": [],
   "source": [
    "def factorial(n):\n",
    "    factor = 1\n",
    "    for i in range(1,n+1):\n",
    "        factor *= i\n",
    "    return factor"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 253,
   "id": "436ffb87-b9f0-426b-ab97-1fad7936aad2",
   "metadata": {},
   "outputs": [],
   "source": [
    "def factorial_recur(n):\n",
    "    if n == 0:\n",
    "        return 1\n",
    "    else:\n",
    "        return n*factorial(n-1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 258,
   "id": "413f6c90-c9c5-43d2-8aca-2da0ded8269b",
   "metadata": {},
   "outputs": [],
   "source": [
    "def recur(x):\n",
    "    print(\"aaa\")\n",
    "    if x == 6:\n",
    "        return \n",
    "    recur(x-1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 269,
   "id": "b4f9010e-a4ef-4cd6-a504-b4c6a9af50da",
   "metadata": {},
   "outputs": [],
   "source": [
    "def sum_recur(x):\n",
    "    if x == 0:\n",
    "        return 0\n",
    "    return x+sum_recur(x-1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 275,
   "id": "3b815246-dbcf-45a6-a3d2-d0e2ef413a94",
   "metadata": {},
   "outputs": [],
   "source": [
    "def sum_non_recur(x):\n",
    "    s = 0\n",
    "    for i in range(1,x+1):\n",
    "        s += i\n",
    "    return s"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "94d60a95-d691-406e-b5b4-24c72176fcde",
   "metadata": {},
   "outputs": [],
   "source": [
    "def fibo(n):\n",
    "    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 287,
   "id": "38dc0796-d822-4c75-a76c-2018a6a3cda4",
   "metadata": {},
   "outputs": [],
   "source": [
    "f_1 = 1\n",
    "f_2 = 1\n",
    "f_3 = f_1 + f_2\n",
    "f_4 = f_3 + f_2\n",
    "f_5 = f_4 + f_3\n",
    "f_6 = f_5 + f_4"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 288,
   "id": "fa1b16ba-4032-43c5-92a8-3e6c745327f0",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "8"
      ]
     },
     "execution_count": 288,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "f_6"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 289,
   "id": "e12d491c-5269-40c6-8d6d-6f33c481d1c0",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "8"
      ]
     },
     "execution_count": 289,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "f_1 = 1\n",
    "f_2 = 1\n",
    "tmp = [f_1,f_2]\n",
    "for i in range(6):\n",
    "    tmp.append((tmp[i]+tmp[i+1]))\n",
    "tmp[-3]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "00c9ee6c-9dde-45e2-89a8-e97a7a7a39ca",
   "metadata": {},
   "outputs": [],
   "source": [
    "def fib(n):\n",
    "    f_1 = 1\n",
    "    f_2 = 1\n",
    "    tmp = [f_1,f_2]\n",
    "    for i in range(n):\n",
    "        tmp.append((tmp[i]+tmp[i+1]))\n",
    "    return tmp[-3]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 302,
   "id": "6ef2c7da-5b05-43dd-8e1b-71ef7ff5c6b0",
   "metadata": {},
   "outputs": [],
   "source": [
    "def fibo(n):\n",
    "    if (n == 1) or (n == 2):\n",
    "        return 1\n",
    "    return fibo(n-1)+fibo(n-2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "c8b8cadb-845d-4515-9c1b-011d1c6e96db",
   "metadata": {},
   "outputs": [],
   "source": [
    "counter = 0\n",
    "def fibo(n):\n",
    "    global counter\n",
    "    counter += 1\n",
    "    if n == 1:\n",
    "        return 1\n",
    "    if n == 2:\n",
    "        return 2\n",
    "    \n",
    "    else: \n",
    "        return fibo(n-1) + fibo(n-2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "1206d865-c5f2-443d-ae60-c9e4c37660c2",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Wall time: 2.58 s\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "14930352"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "%%time\n",
    "fibo(35)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "dc387171-7206-4244-9f64-4f6111482abb",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Wall time: 0 ns\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "9227465"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "%%time\n",
    "fib(35)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 61,
   "id": "772ff45a-41dd-4a51-a69f-59f50ee93d1e",
   "metadata": {},
   "outputs": [],
   "source": [
    "def flatten(x):\n",
    "    result = []\n",
    "    for i in x:\n",
    "        if type(i) == list:\n",
    "            result += flatten(i)\n",
    "        else:\n",
    "            result += [i]\n",
    "    return result"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 63,
   "id": "4a2599c2-b2f1-40ff-817c-c3af91cefa9e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[1, 2, 3, 4, 5, 6, 7, 8, 9]"
      ]
     },
     "execution_count": 63,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "flatten(data)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 54,
   "id": "28be276b-b90b-4698-b6ba-5af5f2c1bba0",
   "metadata": {},
   "outputs": [],
   "source": [
    "data = [[1,2,3],[4,[5,6]],7,[8,9]]\n",
    "data1 = [[1,2,3],[4,5,6],[7,8,9]]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "id": "ea807db2-7918-4336-9dc2-e51740836f2d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[4, [5, 6]]"
      ]
     },
     "execution_count": 34,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "new_data = []\n",
    "for i in data[1]:\n",
    "    new_data.append(i)\n",
    "new_data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 64,
   "id": "a60051fb-1f24-4feb-a327-b353d66677f6",
   "metadata": {},
   "outputs": [],
   "source": [
    "x = [(1,2,3,),(2,3)]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 66,
   "id": "e4b1fa1a-e824-447f-a218-677ad00c4e8f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "tuple"
      ]
     },
     "execution_count": 66,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "type(x[0])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 72,
   "id": "00ee8654-999a-4baa-9776-2a215afa69fb",
   "metadata": {},
   "outputs": [],
   "source": [
    "x = [1,2,3]\n",
    "y = [i*i for i in range(1,4)]\n",
    "z = zip(x,y)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 73,
   "id": "6a7cb800-7738-4659-b84d-704339e793d3",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "((1, 1), (2, 4), (3, 9))"
      ]
     },
     "execution_count": 73,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "tuple(z)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 74,
   "id": "b4d087f7-7765-4632-a799-9c7d5bdea727",
   "metadata": {},
   "outputs": [],
   "source": [
    "x = (list(range(10)),list(range(1,11)))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 78,
   "id": "f93943ea-da97-4998-8c2c-730ed2c16c8d",
   "metadata": {},
   "outputs": [],
   "source": [
    "y, z  = x"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 80,
   "id": "4d3f4853-412d-4a70-8ce6-5827041c7b8c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]"
      ]
     },
     "execution_count": 80,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "z"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "e79fb339-3dae-49e0-9a2b-aee7fd227fb5",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "kbu",
   "language": "python",
   "name": "kbu"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.11"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
